
#user  violet;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile on;
    #tcp_nopush     on
    server_tokens off;

    keepalive_timeout  10;

    #gzip  on;

    upstream node-app {
        least_conn;
        server node:22222 max_fails=9999 fail_timeout=30s;
    }

    server {
      listen 80;
      server_name  example.co.kr;
      client_max_body_size 20M;

      #if ($http_x_forwarded_proto != 'https'){
      #  return 301 https://$server_name$request_uri;
      #}

      #if ($host != $server_name){
      #  return 301 https://$server_name$request_uri;
      #}

      #charset koi8-r;

      #access_log  logs/host.access.log  main;

      location / {
          proxy_pass http://node-app;

          proxy_http_version 1.1;
          proxy_set_header ip $remote_addr;
          proxy_set_header scheme $scheme;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;

          #백엔드 접속 제한 시간
          proxy_connect_timeout 15;

          #백엔드에서 데이터 읽을때 제한시간
          proxy_read_timeout 60;

          #백엔드로 데이터 전송할때 제한 시간
          proxy_send_timeout 60;

          #시간동안 클라이언트의 요청이 없을경우 접속 종료
          send_timeout 100;

      }


    }

}
