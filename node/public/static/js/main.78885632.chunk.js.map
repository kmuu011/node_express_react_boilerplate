{"version":3,"sources":["static/img/profile/nb_NoImage.svg","components/Button/Button.js","config/config.js","utils/axios.js","api/sign.js","container/Main/Main.js","container/SignUp/SignUp.js","components/Part/Nav/NavButton.js","UserStore/UserStore.js","components/Part/Nav/GlobalNavButtons.js","components/Nav/GlobalNav.js","utils/utils.js","components/Modal/Member/MemberModifyModal.js","components/Modal/Member/MemberImgModifyModal.js","container/Member/MyPage/MyPage.js","components/NotFound/NotFound.js","container/App.js","index.js"],"names":["module","exports","Button","props","className","x-name","name","id","onClick","action","style","type","to","url","config","axios","host","domain","api","a","data","headers","options","method","undefined","token","localStorage","getItem","window","location","removeItem","alert","k","Axios","result","new_token","setItem","response","status","call","sign","select_member","update_member","params","update_profile_img","login","sign_up","id_check","nick_check","email_check","Index","useState","setId","password","setPw","keep_check","setCb","idInputRef","useRef","passwordInputRef","e","preventDefault","toString","replace","current","focus","API_sign","message","onSubmit","ref","value","placeholder","onChange","target","checked","htmlFor","submit","idRule","nickRule","emailRule","signUpRef","debounceHandler","useCallback","_","debounce","dom","dup_check","persist","test","values","elements","children","inputs","c","tagName","checkApi","body","button","SimpleNav","UserStore","React","createContext","nav_setter","GlobalNavButtons","sessionStorage","GlobalNav","hidden","getAttribute","closeNav","utils","number","invisible","toLocaleString","split","map","v","document","querySelector","count","str","padStart","MemberModifyModal","modifyRef","setModifyModal","set_modify_modal","member","memberReload","member_reload","closeModal","enableScroll","indexOf","bind","defaultValue","nickname","email","modifyMember","MemberImgModifyModal","setImgModifyModal","set_img_modify_modal","getSrc","setSrc","getImg","setImg","useEffect","profile_img_key","NoImage","getLocation","FormData","append","src","alt","image","files","length","URL","createObjectURL","setHidden","getModifyModal","getImgModifyModal","getMemberInfo","setMemberInfo","selectMember","disableScroll","openImgModifyModal","openModifyModal","NotFound","router","exact","path","component","Main","SignUp","MyPage","global","__dirname","ReactDOM","render","StrictMode","getElementById","ignore_url","pathname","toLocaleLowerCase","substring"],"mappings":"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","file":"static/js/main.78885632.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nb_NoImage.d91b5403.svg\";","import React from 'react';\r\nimport './Button.scss';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Button = {};\r\n\r\nButton.button = function(props) {\r\n    return (\r\n        <div className=\"action-button\" x-name={props.name} id={props.id} onClick={props.action}\r\n        style={props.style}\r\n        >\r\n            <div className=\"button-text\" x-name={props.name}>\r\n                {props.name}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nButton.submit = function(props) {\r\n    return (\r\n        <button className=\"submit-button\" type={\"submit\"}>\r\n            {props.name}\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.location = function(props) {\r\n    return (\r\n        <div className=\"location-button\">\r\n            <Link to={props.url}>\r\n                <div className=\"button-text\">\r\n                    {props.name}\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","let server_type = process.env.NODE_ENV;\r\n\r\nlet domain = {\r\n    production: \"http://127.0.0.1:8081/\",\r\n    development: \"http://127.0.0.1:8081/\"\r\n};\r\n\r\nconst config = {};\r\n\r\nconfig.domain = domain[server_type];\r\n\r\nexport default config;","import Axios from 'axios';\r\nimport config from 'config/config';\r\nconst axios = {};\r\n\r\nlet host = config.domain + 'api/';\r\n\r\naxios.api = async (type, url, data, headers, options) => {\r\n    let config = {\r\n        method : type,\r\n        url : host + url,\r\n        data : data,\r\n        headers : {}\r\n    };\r\n\r\n    let token = localStorage.getItem('x-token');\r\n\r\n    if(token === undefined){\r\n        window.location = '/';\r\n        localStorage.removeItem('x-token');\r\n        alert('로그인 정보가 존재하지 않습니다. 다시 로그인해주세요.');\r\n        return;\r\n    }\r\n\r\n    config.headers['x-token'] = token;\r\n\r\n    if(headers !== undefined){\r\n        config.headers = {...config.headers, ...headers}\r\n    }\r\n\r\n    if (options !== undefined) {\r\n        for (let k in options) {\r\n            config[k] = options[k];\r\n        }\r\n    }\r\n\r\n    try {\r\n        let result = await Axios(config);\r\n        let new_token = result.headers['x-new-token'];\r\n\r\n        if(new_token !== undefined) {\r\n            localStorage.setItem('x-token', new_token);\r\n        }\r\n\r\n        return result;\r\n    }catch (e) {\r\n        if(e?.response?.status === 401){\r\n            localStorage.removeItem('x-token');\r\n            window.location = '/';\r\n        }\r\n        return e?.response;\r\n    }\r\n};\r\n\r\naxios.call = async (type, url, data, headers, options) => {\r\n    let config = {\r\n        method : type,\r\n        url : url,\r\n        data : data,\r\n        headers : {}\r\n    };\r\n\r\n    if(headers !== undefined){\r\n        config.headers = {...config.headers, ...headers}\r\n    }\r\n\r\n    if (options !== undefined) {\r\n        for (let k in options) {\r\n            config[k] = options[k];\r\n        }\r\n    }\r\n\r\n    try {\r\n        let result = await Axios(config);\r\n\r\n        return result;\r\n    }catch (e) {\r\n        return e?.response;\r\n    }\r\n};\r\n\r\n\r\nexport default axios;\r\n","import Axios from 'utils/axios';\r\n\r\nconst sign = {};\r\n\r\nsign.select_member = async () => {\r\n    return await Axios.api('GET', 'member');\r\n};\r\n\r\nsign.update_member = async (params) => {\r\n    return await Axios.api('PATCH', 'member', params);\r\n};\r\n\r\nsign.update_profile_img = async (params) => {\r\n    return await Axios.api('PATCH', 'member/img', params);\r\n};\r\n\r\nsign.login = async (params) => {\r\n    return await Axios.api('POST', 'member/login', params);\r\n};\r\n\r\nsign.sign_up = async (params) => {\r\n    return await Axios.api('POST', 'member/sign_up', params);\r\n};\r\n\r\nsign.id_check = async (params) => {\r\n    return await Axios.api('POST', 'member/id_check', params);\r\n};\r\n\r\nsign.nick_check = async (params) => {\r\n    return await Axios.api('POST', 'member/nick_check', params);\r\n};\r\n\r\nsign.email_check = async (params) => {\r\n    return await Axios.api('POST', 'member/email_check', params);\r\n};\r\n\r\n\r\nexport default sign;\r\n","import React, {useRef, useState} from 'react';\nimport './Main.scss';\nimport Button from \"components/Button/Button\";\n\nimport API_sign from \"api/sign\";\n\nfunction Index() {\n    const [id, setId] = useState(\"\");\n    const [password, setPw] = useState(\"\");\n    const [keep_check, setCb] = useState(false);\n    const idInputRef = useRef();\n    const passwordInputRef = useRef();\n\n    async function login (e) {\n        e.preventDefault();\n\n        let params;\n\n        if(id === '' || id.toString().replace(/\\s/g, '') === ''){\n            alert('아이디를 입력해주세요.');\n            idInputRef.current.focus();\n            return;\n        }\n\n        if(password === '' || password.toString().replace(/\\s/g, '') === ''){\n            alert('비밀번호를 입력해주세요.');\n            passwordInputRef.current.focus();\n            return;\n        }\n\n        params = { id, password, keep_check };\n\n        let result = await API_sign.login(params);\n\n        if(result === undefined || result.status !== 200){\n            alert(result.data.message);\n            return;\n        }\n\n        localStorage.setItem('x-token', result.data['token']);\n\n        window.location = '/my_page';\n    }\n\n  return (\n      <div className=\"login_page\">\n          <div className=\"login_body\">\n              <div className=\"main_title\">테스트</div>\n\n              <div className=\"login_body_desc\">\n                  로그인\n              </div>\n\n              <form onSubmit={login}>\n                  <div className=\"login_id\">\n                      <input ref={idInputRef} type=\"text\" value={id} id=\"id\" placeholder=\"아이디\"\n                             onChange={(e) => setId(e.target.value)} />\n                  </div>\n\n                  <div className=\"login_password\">\n                      <input ref={passwordInputRef} type=\"password\" value={password} id=\"password\" placeholder=\"비밀번호\"\n                             onChange={(e) => setPw(e.target.value)} />\n                  </div>\n\n                  <div className={\"keep_login\"}>\n                      <input type={\"checkbox\"} id={\"cb\"} value={keep_check}\n                      onChange={(e) => setCb(e.target.checked)} />\n                      <label htmlFor={\"cb\"}>\n                          <div className={\"keep_login_label\"}>\n                              로그인 상태 유지\n                          </div>\n                      </label>\n                  </div>\n\n                  <div className=\"login_sign_in\">\n                      <Button.submit name={\"로그인\"}/>\n                  </div>\n              </form>\n\n              <div className=\"login_sign_up\">\n                  <Button.location name={\"회원가입\"} url={\"/sign_up\"}/>\n              </div>\n\n          </div>\n      </div>\n  );\n\n}\n\n\n\nexport default Index;\n","import React, { useCallback, useRef} from 'react';\nimport _ from 'lodash';\nimport './SignUp.scss';\nimport Button from \"components/Button/Button\";\n\nimport API_sign from \"api/sign\";\n\nfunction Index() {\n    let idRule = /^[0-9a-zA-Z]*$/i;\n    let nickRule = /^[0-9a-zA-Z가-힣]*$/i;\n    let emailRule = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n\n    const signUpRef = useRef();\n\n    const debounceHandler = useCallback(\n        _.debounce(async (id, dom) => {\n            await dup_check(id, dom);\n        },400), []\n    );\n\n    const onChange = (e) => {\n        e.persist();\n\n        let { id } = e.target;\n\n        if((/^id$|^nickname$|^email$/).test(id)) {\n            debounceHandler(id, e.target);\n        }\n    };\n\n    async function sign_up() {\n        let values = {};\n\n        let elements = signUpRef.current.children;\n\n        let inputs = {};\n\n        for(let e of elements){\n            for(let c of e.children){\n                if(c.tagName === 'INPUT') inputs[c.id] = c;\n            }\n        }\n\n        for(let k in inputs){\n            let e = inputs[k];\n\n            let value = e.value;\n\n            if(value.toString().replace(/\\s/g, '') === ''){\n                alert('입력하지 않은 항목이 있습니다');\n                e.focus();\n                return;\n            }\n\n            if((/^id$|^nickname$|^email$/).test(e.id)) {\n                await dup_check(e.id, e);\n            }\n\n            values[e.id] = value;\n        }\n\n        if(values['password'] !== values['pwd_check']){\n            alert('비밀번호와 비밀번호 확인이 서로 일치하지 않습니다.');\n            inputs['pwd_check'].focus();\n            return;\n        }\n\n        if(!idRule.test(values['id'])){\n            alert('아이디에 사용할 수 없는 문자가 포함되어 있습니다.');\n            inputs['id'].focus();\n            return\n        }\n\n        if(!nickRule.test(values['nickname'])){\n            alert('닉네임에 사용할 수 없는 문자가 포함되어 있습니다.');\n            inputs['nickname'].focus();\n            return\n        }\n\n        if(!emailRule.test(values['email'])){\n            alert('사용할 수 없는 이메일 입니다.');\n            inputs['email'].focus();\n            return\n        }\n\n        let result = await API_sign.sign_up(values);\n\n        if(result.status === 200){\n            alert('회원가입이 완료되었습니다.');\n            window.location = '/';\n        }else{\n            alert(result.data.message);\n        }\n    }\n\n    async function dup_check (id, dom) {\n        let value = dom.value;\n        let checkApi, body;\n\n        if(value === undefined || value.toString().replace(/\\s/g, '') === '') return;\n\n        if(id === 'id'){\n            if(!idRule.test(value)){\n                dom.style['border-color'] = 'red';\n                return;\n            }\n\n            checkApi = API_sign.id_check;\n        }else if(id === 'nickname'){\n            checkApi = API_sign.nick_check\n        }else if(id === 'email'){\n            if(!emailRule.test(value)){\n                dom.style['border-color'] = 'red';\n                return;\n            }\n            checkApi = API_sign.email_check;\n        }\n\n        body = {[id]: value};\n\n        let result = await checkApi(body);\n\n        if(result.status !== 200){\n            dom.style['border-color'] = 'red';\n            return false;\n        }else{\n            dom.style['border-color'] = 'green';\n            return true;\n        }\n    }\n\n    return (\n        <div className=\"sign_up_page\">\n\n            <div className={\"sign_up_body\"} ref={signUpRef}>\n                <div className=\"sign_up_title\">\n                    회원가입\n                </div>\n                <div className=\"sign_up_id\">\n                    <div className={\"input_text\"}>아이디</div>\n                    <input type=\"text\" id=\"id\" placeholder=\"아이디\" onChange={onChange}/>\n                </div>\n\n                <div className=\"sign_up_password\">\n                    <div className={\"input_text\"}>비밀번호</div>\n                    <input type=\"password\" id=\"password\" placeholder=\"비밀번호\" onChange={onChange}/>\n                </div>\n\n                <div className=\"sign_up_password\">\n                    <div className={\"input_text\"}>비밀번호 확인</div>\n                    <input type=\"password\" id=\"pwd_check\" placeholder=\"비밀번호 확인\" onChange={onChange}/>\n                </div>\n\n                <div className=\"sign_up_nickname\">\n                    <div className={\"input_text\"}>닉네임</div>\n                    <input type=\"text\" id=\"nickname\" placeholder=\"닉네임\" onChange={onChange}/>\n                </div>\n\n                <div className=\"sign_up_email\">\n                    <div className={\"input_text\"}>이메일</div>\n                    <input type=\"text\" id=\"email\" placeholder=\"이메일\" onChange={onChange}/>\n                </div>\n\n            </div>\n\n            <div className=\"sign_up_footer\">\n                <div className=\"sign_up_button\">\n                    <Button.button name={\"회원가입\"} action={sign_up}/>\n                </div>\n\n                <div className=\"sign_up_home\">\n                    <Button.location name={\"홈\"} url={\"/\"}/>\n                </div>\n            </div>\n\n        </div>\n\n    );\n}\n\n\n\n\n\n\nexport default Index;\n","import React from 'react';\nimport './NavButton.scss';\n\nfunction SimpleNav(props) {\n    return (\n        <div className={\"nav_menu_wrapper\"} onClick={props.action}>\n            <div className={\"nav_menu\"}>\n                <span />\n                <span />\n                <span />\n            </div>\n        </div>\n    );\n}\n\nexport default SimpleNav;\n","import React from 'react';\n\nexport const UserStore = React.createContext(null);\n\nUserStore.nav_setter = null;\n\n","import React  from 'react';\nimport './GlobalNavButtons.scss';\n\n\nfunction GlobalNavButtons() {\n    function logOut () {\n        sessionStorage.removeItem('x-token');\n        localStorage.removeItem('x-token');\n        window.location = '/';\n    }\n\n    return (\n        <div className={\"nav_footer_wrapper\"}>\n            <div className={\"nav_button_bottom\"} onClick={logOut}>\n                로그아웃\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default GlobalNavButtons;\n","import React  from 'react';\nimport './GlobalNav.scss';\nimport {UserStore} from \"UserStore/UserStore\";\n\nimport GlobalNavButtons from \"components/Part/Nav/GlobalNavButtons\";\n\n\nfunction GlobalNav(props) {\n    let nav_setter = UserStore.nav_setter;\n\n    function closeNav (e) {\n        let target_class = e.target.getAttribute('class');\n\n        if(target_class === 'nav_modal'){\n            nav_setter(true);\n        }\n    }\n\n    return (\n        <div>\n            <div className={\"nav_modal\"} hidden={props.hidden} onClick={(e) => closeNav(e)}>\n                <div className={\"nav_button_wrapper\"}>\n                    <GlobalNavButtons/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default GlobalNav;\n","import config from \"config/config\";\r\n\r\nconst utils = {};\r\n\r\nutils.commaParser = function(number, type, invisible){\r\n    if(number === null || number === undefined) return 0;\r\n\r\n    if(type === undefined){\r\n        number = number.toLocaleString();\r\n    }else{\r\n        type = type === 0 ? '-' : '+';\r\n        number = type + number.toLocaleString();\r\n    }\r\n\r\n    if(invisible === 1){\r\n        number = number.toString().split('').map(v=>(v===',' ? ',' : '-'));\r\n    }\r\n\r\n    return number;\r\n};\r\n\r\nutils.disableScroll = function () {\r\n    document.querySelector('html').style['overflow'] = 'hidden';\r\n};\r\n\r\nutils.enableScroll = function () {\r\n    document.querySelector('html').style['overflow'] = 'auto';\r\n};\r\n\r\nutils.leftPadding = function(value, count, str) {\r\n    return value.toString().padStart(count, str);\r\n};\r\n\r\nutils.getLocation = function () {\r\n    return config.domain\r\n};\r\n\r\nexport default utils;\r\n","import React, {useCallback, useRef} from 'react';\r\nimport _ from 'lodash';\r\nimport './MemberModifyModal.scss';\r\nimport utils from \"utils/utils\";\r\nimport Button from \"components/Button/Button\";\r\nimport API_sign from \"api/sign\";\r\n\r\nconst nickRule = /^[0-9a-zA-Z가-힣]*$/i;\r\nconst emailRule = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\nfunction MemberModifyModal(props) {\r\n    const modifyRef = useRef();\r\n\r\n    const debounceHandler = useCallback(\r\n        _.debounce(async (id, dom) => {\r\n            await dup_check(id, dom);\r\n        },400), []\r\n    );\r\n\r\n    if(props.hidden) return null;\r\n\r\n    const setModifyModal = props.set_modify_modal;\r\n    const member = props.member;\r\n    const memberReload = props.member_reload;\r\n\r\n    function closeModal (e) {\r\n        utils.enableScroll();\r\n\r\n        if(e === undefined){\r\n            setModifyModal(true);\r\n            return;\r\n        }\r\n\r\n        let target_class = e.target.getAttribute('class');\r\n\r\n        if(target_class.indexOf('member_modify_modal') !== -1){\r\n            setModifyModal(true);\r\n            return;\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.persist();\r\n\r\n        let { id } = e.target;\r\n\r\n        if((/^nickname$|^email$/).test(id)) {\r\n            debounceHandler(id, e.target);\r\n        }\r\n    };\r\n\r\n    async function modifyMember() {\r\n        let values = {};\r\n\r\n        let elements = modifyRef.current.children;\r\n\r\n        let inputs = {};\r\n\r\n        for(let e of elements){\r\n            for(let c of e.children){\r\n                if(c.tagName === 'INPUT') inputs[c.id] = c;\r\n            }\r\n        }\r\n\r\n        for(let k in inputs){\r\n            let e = inputs[k];\r\n\r\n            let value = e.value;\r\n\r\n            if(value.toString().replace(/\\s/g, '') === ''){\r\n                alert('입력하지 않은 항목이 있습니다');\r\n                e.focus();\r\n                return;\r\n            }\r\n\r\n            if((/^nickname$|^email$/).test(k)) {\r\n                await dup_check(k, e);\r\n            }\r\n\r\n            values[k] = value;\r\n        }\r\n\r\n        if(values['password'] !== values['pwd_check']){\r\n            alert('비밀번호와 비밀번호 확인이 서로 일치하지 않습니다.');\r\n            inputs['pwd_check'].focus();\r\n            return;\r\n        }\r\n\r\n        if(!nickRule.test(values['nickname'])){\r\n            alert('닉네임에 사용할 수 없는 문자가 포함되어 있습니다.');\r\n            inputs['nickname'].focus();\r\n            return\r\n        }\r\n\r\n        if(!emailRule.test(values['email'])){\r\n            alert('사용할 수 없는 이메일 입니다.');\r\n            inputs['email'].focus();\r\n            return\r\n        }\r\n\r\n        let result = await API_sign.update_member(values);\r\n\r\n        if(result.status !== 200){\r\n            alert(result.data.message);\r\n            return;\r\n        }\r\n\r\n        if(result.data) {\r\n            alert('수정이 완료되었습니다.');\r\n            setModifyModal(true);\r\n            memberReload();\r\n        }\r\n    }\r\n\r\n    async function dup_check (id, dom) {\r\n        let value = dom.value;\r\n        let checkApi, body;\r\n\r\n        if(value === undefined || value.toString().replace(/\\s/g, '') === '') return;\r\n\r\n        if(id === 'nickname'){\r\n            checkApi = API_sign.nick_check\r\n        }else if(id === 'email'){\r\n            if(!emailRule.test(value)){\r\n                dom.style['border-color'] = 'red';\r\n                return;\r\n            }\r\n            checkApi = API_sign.email_check;\r\n        }\r\n\r\n        body = {[id]: value};\r\n\r\n        let result = await checkApi(body);\r\n\r\n        if(result.status !== 200){\r\n            dom.style['border-color'] = 'red';\r\n            return false;\r\n        }else{\r\n            dom.style['border-color'] = 'green';\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"member_modify_modal modal_div\"\r\n                 onClick={closeModal.bind(null)}\r\n            >\r\n\r\n                <div className={\"modify_data_body\"}>\r\n                    <div className={\"modify_data_wrapper\"} ref={modifyRef}>\r\n                        <div className={\"modify_data\"}>\r\n                            <div className={\"data_description\"}>\r\n                                닉네임\r\n                            </div>\r\n                            <input type=\"text\" className={\"data_nickname\"}\r\n                                   id={\"nickname\"}\r\n                                   placeholder={\"닉네임\"}\r\n                                   defaultValue={member.nickname}\r\n                                   onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n                        <div className={\"modify_data\"}>\r\n                            <div className={\"data_description\"}>\r\n                                이메일\r\n                            </div>\r\n                            <input type=\"text\" className={\"data_email\"}\r\n                                    id={\"email\"}\r\n                                   placeholder={\"이메일\"}\r\n                                   defaultValue={member.email}\r\n                                   onChange={(e) => onChange(e)}\r\n                            />\r\n                        </div>\r\n                        <div className={\"modify_data\"}>\r\n                            <div className={\"data_description\"}>\r\n                                이전 비밀번호\r\n                            </div>\r\n                            <input type=\"password\" className={\"data_old_pwd\"}\r\n                                   id={\"old_password\"}\r\n                                   placeholder={\"이전 비밀번호\"}\r\n                            />\r\n                        </div>\r\n                        <div className={\"modify_data\"}>\r\n                            <div className={\"data_description\"}>\r\n                                새 비밀번호\r\n                            </div>\r\n                            <input type=\"password\" className={\"data_password\"}\r\n                                    id={\"password\"}\r\n                                    placeholder={\"새 비밀번호\"}\r\n                            />\r\n                        </div>\r\n                        <div className={\"modify_data\"}>\r\n                            <div className={\"data_description\"}>\r\n                                새 비밀번호 확인\r\n                            </div>\r\n                            <input type=\"password\" className={\"data_password\"}\r\n                                   id={\"pwd_check\"}\r\n                                   placeholder={\"새 비밀번호 확인\"}\r\n                            />\r\n                        </div>\r\n                        <div className={\"modify_button_wrapper\"}>\r\n                            <Button.button name={\"수정하기\"} id={\"update_button\"}\r\n                                           action={() => modifyMember()}/>\r\n                            <Button.button name={\"취소\"} action={() => closeModal()}/>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemberModifyModal;\r\n","import React, {useEffect, useState} from 'react';\r\nimport './MemberImgModifyModal.scss';\r\n\r\nimport utils from \"utils/utils\";\r\nimport Button from \"components/Button/Button\";\r\nimport API_sign from \"api/sign\";\r\nimport NoImage from \"static/img/profile/nb_NoImage.svg\";\r\n\r\nfunction MemberImgModifyModal(props) {\r\n    let setImgModifyModal = props.set_img_modify_modal;\r\n    let member = props.member;\r\n    let memberReload = props.member_reload;\r\n\r\n    const [ getSrc, setSrc ] = useState();\r\n    const [ getImg, setImg ] = useState();\r\n\r\n    useEffect(() => {\r\n        setImg(null);\r\n        setSrc(member.profile_img_key === null ? NoImage : utils.getLocation() + member.profile_img_key);\r\n    },[member.profile_img_key]);\r\n\r\n    if(props.hidden) return null;\r\n\r\n    function closeModal (e) {\r\n        utils.enableScroll();\r\n\r\n        if(e === undefined){\r\n            setImgModifyModal(true);\r\n            return;\r\n        }\r\n\r\n        let target_class = e?.target?.getAttribute('class');\r\n\r\n        if(target_class.indexOf('member_modify_modal') !== -1){\r\n            setImgModifyModal(true);\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function modifyMember () {\r\n        let params = new FormData();\r\n\r\n        params.append('file', getImg);\r\n\r\n        let result = await API_sign.update_profile_img(params);\r\n\r\n        if(result.status !== 200){\r\n            alert(result.data.message);\r\n            return;\r\n        }\r\n\r\n        if(result.data) {\r\n            alert('수정이 완료되었습니다.');\r\n            setImgModifyModal(true);\r\n            memberReload();\r\n        }\r\n    }\r\n\r\n    function loadImage (image){\r\n        if(image.length !== 0) {\r\n            setSrc(URL.createObjectURL(image[0]));\r\n            setImg(image[0]);\r\n        }else{\r\n            setSrc(NoImage);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"member_modify_modal modal_div\"\r\n                 onClick={closeModal.bind(null)}\r\n            >\r\n\r\n                <div className={\"modify_img_body\"}>\r\n                    <div className={\"modify_data_wrapper\"}>\r\n                        <div className={\"profile_img_wrapper\"}>\r\n                            <div className={\"profile_img_border\"}>\r\n                                <img className={\"profile_image\"}\r\n                                     id={\"preview_img\"}\r\n                                     src={getSrc}\r\n                                     alt={\"profile_image\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={\"modify_data\"}>\r\n                            <input type=\"file\" className={\"data_img\"}\r\n                                   id={\"img\"}\r\n                                   onChange={(e) => loadImage(e.target.files)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={\"modify_button_wrapper\"}>\r\n                            <Button.button name={\"수정하기\"} id={\"update_button\"}\r\n                                           action={() => modifyMember()}/>\r\n                            <Button.button name={\"취소\"} action={() => closeModal()}/>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default MemberImgModifyModal;\r\n","import React, {useEffect, useState} from 'react';\nimport './MyPage.scss';\nimport NavButton from 'components/Part/Nav/NavButton';\nimport GlobalNav from \"components/Nav/GlobalNav\";\n\nimport API_sign from 'api/sign';\n\nimport { UserStore } from \"UserStore/UserStore\";\nimport Button from \"components/Button/Button\";\nimport utils from \"utils/utils\";\n\nimport NoImage from \"static/img/profile/nb_NoImage.svg\";\nimport MemberModifyModal from \"components/Modal/Member/MemberModifyModal\";\nimport MemberImgModifyModal from \"components/Modal/Member/MemberImgModifyModal\";\n\nfunction Index() {\n    const [ hidden, setHidden ] = useState(true);\n\n    const [ getModifyModal, setModifyModal ] = useState(true);\n\n    const [ getImgModifyModal, setImgModifyModal ] = useState(true);\n\n    const [ getMemberInfo, setMemberInfo ] = useState(undefined);\n\n    useEffect(() => {\n        selectMember();\n    }, []);\n\n    if(getMemberInfo === undefined) return null;\n\n    function openNav () {\n        setHidden(false);\n        UserStore.nav_setter = setHidden;\n    }\n\n    function openModifyModal (setModifyModal) {\n        setModifyModal(false);\n        utils.disableScroll();\n    }\n\n    function openImgModifyModal (setImgModifyModal) {\n        setImgModifyModal(false);\n        utils.disableScroll();\n    }\n\n    async function selectMember () {\n        let result = await API_sign.select_member();\n\n        if(result.status !== 200){\n            alert(result.data.message);\n            return;\n        }\n\n        setMemberInfo(result.data);\n    }\n\n    return (\n        <div className={\"App_container\"}>\n            <GlobalNav hidden={hidden} />\n            <MemberModifyModal\n                hidden={getModifyModal}\n                set_modify_modal={setModifyModal}\n                member={getMemberInfo}\n                member_reload={selectMember}\n            />\n            <MemberImgModifyModal\n                hidden={getImgModifyModal}\n                set_img_modify_modal={setImgModifyModal}\n                member={getMemberInfo}\n                member_reload={selectMember}\n            />\n\n            <NavButton action={() => openNav()}/>\n\n            <div className={'title'}>\n                마이페이지\n            </div>\n\n            <div className=\"my_page\">\n                <div className={\"profile_img_wrapper\"}>\n                    <div className={\"profile_img_border\"}>\n                        <img className={\"profile_image\"}\n                             src={getMemberInfo.profile_img_key === null ? NoImage : utils.getLocation() + getMemberInfo.profile_img_key}\n                             alt={\"profile_image\"}\n                             onClick={() => openImgModifyModal(setImgModifyModal)}\n                        />\n                    </div>\n                </div>\n\n                <div className={\"profile_data_wrapper\"}>\n                    <div className={\"profile_data_body\"}>\n                        <div className={\"profile_data\"}>\n                            <div className={\"profile_description\"}>\n                                아이디\n                            </div>\n                            <div className={\"profile_value\"}>\n                                {getMemberInfo.id}\n                            </div>\n                        </div>\n                        <div className={\"profile_data\"}>\n                            <div className={\"profile_description\"}>\n                                닉네임\n                            </div>\n                            <div className={\"profile_value\"}>\n                                {getMemberInfo.nickname}\n                            </div>\n                        </div>\n                        <div className={\"profile_data\"}>\n                            <div className={\"profile_description\"}>\n                                이메일\n                            </div>\n                            <div className={\"profile_value\"}>\n                                {getMemberInfo.email}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className={\"profile_button_body\"}>\n                    <Button.button name={\"수정하기\"} id={\"update_button\"}\n                                   action={() => openModifyModal(setModifyModal)}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default Index;\n","import React from 'react';\nimport './NotFound.scss';\n\nfunction NotFound() {\n    return (\n      <div className=\"App_container\">\n          <p>존재하지 않는 페이지입니다.</p>\n      </div>\n    );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter as Router,\n    Route, Switch } from \"react-router-dom\";\n\nimport Main from \"./Main/Main\";\nimport SignUp from \"./SignUp/SignUp\";\n\nimport MyPage from \"./Member/MyPage/MyPage\";\n\nimport NotFound from \"components/NotFound/NotFound\";\n\nconst location = {\n    home : \"/\",\n    sign_up : \"/sign_up\",\n\n    my_page: \"/my_page\",\n\n    not_found : \"/*\",\n};\n\nfunction router() {\n    return (\n        <div className=\"App-page\">\n            <Router>\n                <Switch>\n                    <Route exact path={location.home} component={Main}/>\n                    <Route exact path={location.sign_up} component={SignUp}/>\n                    <Route exact path={location.my_page} component={MyPage}/>\n\n                    <Route exact path={location.not_found} component={NotFound}/>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\n\nexport default router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.scss';\n\nimport './index.scss';\n\nimport App from './container/App';\n\nglobal.path = __dirname;\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nconst ignore_url = /^sign_up$|^api\\b/;\n\n(function(){\n    let url = document.location.pathname.toLocaleLowerCase().substring(1);\n    let token = localStorage.getItem('x-token');\n\n    if(url === ''){\n        if(token !== null){\n            window.location = '/my_page';\n        }else{\n            localStorage.removeItem('x-token');\n        }\n    }else if(!ignore_url.test(url)){\n        if(token === null){\n            localStorage.removeItem('x-token');\n            window.location = '/';\n            alert('로그인 정보가 존재하지 않습니다. 다시 로그인 해주세요.');\n        }\n    }\n\n\n}());\n\n"],"sourceRoot":""}